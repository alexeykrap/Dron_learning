В рамках задания вам необходимо сделать  проектирование RESTful интерфейсов.

Инструкция:

Шаг 1: Определение Ресурсов

Определите ресурсы для управления БПЛА, например:
- "БПЛА" с атрибутами `id`, `name`, `status`, `location`.
- "Миссия" с атрибутами `id`, `name`, `start_time`, `end_time`, `route`.

Шаг 2: Определение CRUD Операций

Реализуйте следующие CRUD операции для ресурсов "БПЛА" и "Миссия":
++ Создание нового БПЛА (HTTP метод: POST, Эндпоинт: `/drones`).
++ Получение списка всех БПЛА (HTTP метод: GET, Эндпоинт: `/drones`).
++ Получение информации о конкретном БПЛА (HTTP метод: GET, Эндпоинт: `/drones/{id}`).
++ Обновление информации о БПЛА (HTTP метод: PUT, Эндпоинт: `/drones/{id}`).
+ Удаление БПЛА (HTTP метод: DELETE, Эндпоинт: `/drones/{id}`).
+ Создание новой миссии (HTTP метод: POST, Эндпоинт: `/missions`)
+ Получение списка всех миссий (HTTP метод: GET, Эндпоинт: `/missions`).
+ Получение информации о конкретной миссии (HTTP метод: GET, Эндпоинт: `/missions/{id}`).
+ Обновление информации о миссии (HTTP метод: PUT, Эндпоинт: `/missions/{id}`).
+ Удаление миссии (HTTP метод: DELETE, Эндпоинт: `/missions/{id}`).

Шаг 3: Определение Формата Данных

Определите формат представления данных, например, в формате JSON.

4. Структура данных:

- Запрос на создание/обновление БПЛА:
{"name": "Название", "status": "Статус", "location": "Местоположение"}
- Ответ на запрос получения списка БПЛА: [
{"id": 1, "name": "БПЛА 1", "status": "В полете", "location": "Координаты 1"},
{"id": 2, "name": "БПЛА 2", "status": "На земле", "location": "Координаты 2"}
]
- Запрос на создание/обновление миссии:
{"name": "Название", "start_time": "Время начала", "end_time": "Время окончания", "route": "Маршрут"}
- Ответ на запрос получения списка миссий: [
{"id": 1, "name": "Миссия 1", "start_time": "Время начала 1", "end_time": "Время окончания 1", "route": "Маршрут 1"},
{"id": 2, "name": "Миссия 2", "start_time": "Время начала 2", "end_time": "Время окончания 2", "route": "Маршрут 2"}
]

5. Коды состояния HTTP:

- 200 OK: Успешный запрос.
- 201 Created: Ресурс успешно создан.
- 404 Not Found: Ресурс не найден.
- 400 Bad Request: Некорректный запрос.
- 500 Internal Server Error: Внутренняя ошибка сервера.